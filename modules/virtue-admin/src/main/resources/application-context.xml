<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/data/jpa
    	http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
    	http://www.springframework.org/schema/data/repository
        http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd">


	<bean name="certificatesDirectory" class="java.io.File">
		<constructor-arg value="${virtue.aws.server.keyDirectory}" />
	</bean>
	<bean name="keyManager"
		class="com.ncc.savior.virtueadmin.infrastructure.DirectoryKeyManager">
		<constructor-arg ref="certificatesDirectory" />
	</bean>
	<bean name="appManager"
		class="com.ncc.savior.virtueadmin.infrastructure.SimpleApplicationManager">
	</bean>

	<!-- <bean name="virtueDao" -->
	<!-- class="com.ncc.savior.virtueadmin.data.InMemoryActiveVirtueDao"> -->
	<!-- </bean> -->

	<bean name="serverIdProvider" class="com.ncc.savior.virtueadmin.util.ServerIdProvider">
		<constructor-arg value="${virtue.serverId}"></constructor-arg>
	</bean>

	<bean name="virtueDao"
		class="com.ncc.savior.virtueadmin.data.jpa.SpringJpaActiveVirtueDao">
	</bean>
	<bean name="activeVirtueManager" class="com.ncc.savior.virtueadmin.virtue.ActiveVirtueManager">
		<constructor-arg ref="cloudManager" />
		<constructor-arg ref="virtueDao" />
	</bean>
	<!-- <bean name="templateManager" class="com.ncc.savior.virtueadmin.data.InMemoryTemplateManager"> -->
	<!-- </bean> -->

	<bean name="templateManager"
		class="com.ncc.savior.virtueadmin.data.jpa.SpringJpaTemplateManager">
	</bean>

	<bean name="resourceManager"
		class="com.ncc.savior.virtueadmin.data.jpa.SpringJpaResourceManager">
	</bean>

	<bean name="userManager"
		class="com.ncc.savior.virtueadmin.data.jpa.SpringJpaUserManager">
	</bean>

	<jpa:repositories base-package="com.ncc.savior.virtueadmin.data.jpa" />

	<bean name="adminService" class="com.ncc.savior.virtueadmin.service.AdminService"
		init-method="sync">
		<constructor-arg ref="templateManager" />
		<constructor-arg ref="activeVirtueManager" />
		<constructor-arg ref="userManager" />
		<constructor-arg ref="persistentStorageManager" />
		<constructor-arg ref="securityGroupManager" />
		<constructor-arg ref="resourceManager" />
		<constructor-arg ref="vpcSubnetProvider" />
		<constructor-arg ref="xenVmProvider"/>
		<constructor-arg value="${savior.initialAdmin}" />
	</bean>

	<bean name="awsEc2Provider"
		class="com.ncc.savior.virtueadmin.infrastructure.aws.VirtueAwsEc2Provider">
		<constructor-arg value="${virtue.aws.region}"></constructor-arg>
		<constructor-arg value="${virtue.aws.profile}"></constructor-arg>
	</bean>

	<bean name="awsRoute53"
		class="com.ncc.savior.virtueadmin.infrastructure.aws.Route53Manager">
		<constructor-arg ref="awsEc2Provider"></constructor-arg>
		<constructor-arg value="${virtue.aws.domain}"></constructor-arg>
	</bean>

	<bean name="ec2Wrapper"
		class="com.ncc.savior.virtueadmin.infrastructure.aws.AwsEc2Wrapper">
		<constructor-arg ref="awsEc2Provider"></constructor-arg>
		<constructor-arg ref="serverIdProvider"></constructor-arg>
		<constructor-arg value="${virtue.aws.usePublicDns:default}"></constructor-arg>
	</bean>

	<bean name="cifsProxyDao" class="com.ncc.savior.virtueadmin.data.jpa.JpaCifsProxyDao">
		<constructor-arg value="${virtue.cifs.timeoutMills}"></constructor-arg>
	</bean>

	<bean name="cifsProxyManager" class="com.ncc.savior.virtueadmin.cifsproxy.CifsManager"
		init-method="sync">
		<constructor-arg ref="serverIdProvider"></constructor-arg>
		<constructor-arg ref="cifsProxyDao"></constructor-arg>
		<constructor-arg ref="ec2Wrapper"></constructor-arg>
		<constructor-arg ref="futureServiceProvider"></constructor-arg>
		<constructor-arg ref="vpcSubnetProvider"></constructor-arg>
		<constructor-arg ref="templateService"></constructor-arg>
		<constructor-arg value="${virtue.cifs.ami}"></constructor-arg>
		<constructor-arg value="${virtue.cifs.loginUser}"></constructor-arg>
		<constructor-arg value="${virtue.cifs.keyName}"></constructor-arg>
		<constructor-arg value="${virtue.cifs.instanceType}"></constructor-arg>
	</bean>

	<bean name="windowsDisplayServerDao"
		class="com.ncc.savior.virtueadmin.data.jpa.JpaWindowsDisplayServerProxyDao">
	</bean>

	<bean name="windowsDisplayServerManager"
		class="com.ncc.savior.virtueadmin.infrastructure.windows.WindowsDisplayServerManager"
		init-method="init">
		<constructor-arg ref="serverIdProvider"></constructor-arg>
		<constructor-arg ref="ec2Wrapper"></constructor-arg>
		<constructor-arg ref="futureServiceProvider"></constructor-arg>
		<constructor-arg ref="vpcSubnetProvider"></constructor-arg>
		<constructor-arg ref="keyManager"></constructor-arg>
		<constructor-arg ref="templateService"></constructor-arg>
	</bean>

	<!-- <bean name="awsVmUpdater" -->
	<!-- class="com.ncc.savior.virtueadmin.infrastructure.aws.AwsVmUpdater"> -->
	<!-- <constructor-arg ref="awsEc2Provider"></constructor-arg> -->
	<!-- <constructor-arg ref="activeVirtueUpdater" /> -->
	<!-- <constructor-arg ref="keyManager" /> -->
	<!-- <constructor-arg value="false"></constructor-arg> -->
	<!-- <constructor-arg value="false"></constructor-arg> -->
	<!-- <constructor-arg value="${virtue.aws.usePublicDns}"></constructor-arg> -->
	<!-- </bean> -->
	<bean name="futureServiceProvider"
		class="com.ncc.savior.virtueadmin.infrastructure.future.CompletableFutureServiceProvider"
		init-method="init">
		<constructor-arg ref="awsEc2Provider"></constructor-arg>
		<constructor-arg ref="activeVirtueUpdater" />
		<constructor-arg ref="keyManager" />
		<constructor-arg value="${virtue.aws.usePublicDns}"></constructor-arg>
	</bean>

	<!-- <bean name="vpcSubnetProvider" class="com.ncc.savior.virtueadmin.infrastructure.subnet.StaticVpcSubnetProvider"> -->
	<!-- <constructor-arg ref="ec2Wrapper" /> -->
	<!-- <constructor-arg value="${virtue.aws.server.vpc.name}" /> -->
	<!-- <constructor-arg value="${virtue.aws.server.subnet.name}" /> -->
	<!-- </bean> -->

	<bean name="networkAclManager"
		class="com.ncc.savior.virtueadmin.infrastructure.aws.subnet.NetworkAclManager"
		init-method="init">
		<constructor-arg ref="serverIdProvider" />
		<constructor-arg ref="ec2Wrapper" />
		<constructor-arg value="${virtue.aws.server.vpc.name}" />
		<constructor-arg value="${virtue.aws.server.subnet.cidrStart}" />
		<constructor-arg value="${virtue.aws.server.subnet.cidrEnd}" />
	</bean>

	<bean name="vpcSubnetProvider"
		class="com.ncc.savior.virtueadmin.infrastructure.aws.subnet.DynamicVpcSubnetProvider">
		<constructor-arg ref="ec2Wrapper" />
		<constructor-arg ref="serverIdProvider" />
		<constructor-arg ref="networkAclManager" />
		<constructor-arg value="${virtue.aws.server.vpc.name}" />
		<constructor-arg value="${virtue.aws.server.subnet.cidrStart}" />
		<constructor-arg value="${virtue.aws.server.subnet.cidrEnd}" />
		<constructor-arg value="${virtue.aws.usePublicDns}" />
		<constructor-arg value="${virtue.aws.server.subnet.routeTableId}" />
		<constructor-arg value="${virtue.aws.availabilityZone}"></constructor-arg>
	</bean>

	<bean name="securityGroupManager"
		class="com.ncc.savior.virtueadmin.infrastructure.aws.securitygroups.SecurityGroupManager">
		<constructor-arg ref="ec2Wrapper" />
		<constructor-arg ref="serverIdProvider" />
		<constructor-arg value="${virtue.aws.server.vpc.name}" />
	</bean>

	<bean name="
			awsVmManager "
		class="com.ncc.savior.virtueadmin.infrastructure.aws.AsyncAwsEc2VmManager">
		<constructor-arg ref="futureServiceProvider" />
		<constructor-arg ref="keyManager" />
		<constructor-arg ref="ec2Wrapper" />
		<constructor-arg ref="vpcSubnetProvider" />
		<constructor-arg ref="serverIdProvider" />
		<property name="serverKeyName" value="${virtue.aws.server.vmKey}"></property>
		<property name="defaultSecurityGroupsCommaSeparated" value="${virtue.aws.server.securityGroups}"></property>
		<!-- <property name="awsProfile" value="">${virtue.aws.profile}</property> -->
		<property name="instanceType" value="${virtue.aws.instanceType}"></property>
		<property name="updateListener" ref="activeVirtueUpdater"></property>
		<!-- <property name="defaultAmi" value="${virtue.aws.server.defaultAmi}"></property> -->
	</bean>

	<bean name="activeVirtueUpdater"
		class="com.ncc.savior.virtueadmin.virtue.ActiveVirtueManagerUpdatingListener">
		<constructor-arg ref="virtueDao"></constructor-arg>
	</bean>

	<!-- <bean name="xenVmManager" -->
	<!-- class="com.ncc.savior.virtueadmin.infrastructure.XenVirtualMachineManager"> -->
	<!-- <constructor-arg ref="keyManager" /> -->
	<!-- <constructor-arg value="${virtue.aws.region}"></constructor-arg> -->
	<!-- <constructor-arg value="${virtue.aws.profile}"></constructor-arg> -->
	<!-- <property name="serverKeyName" value="${virtue.aws.server.vmKey}"></property> -->
	<!-- </bean> -->

	<bean name="cloudManager"
		class="com.ncc.savior.virtueadmin.infrastructure.mixed.XenAwsMixCloudManager">
		<constructor-arg ref="xenManager"></constructor-arg>
		<constructor-arg ref="awsVmManager"></constructor-arg>
		<constructor-arg ref="windowStartupService"></constructor-arg>
		<constructor-arg ref="futureServiceProvider"></constructor-arg>
		<constructor-arg ref="vpcSubnetProvider"></constructor-arg>
		<constructor-arg ref="securityGroupManager"></constructor-arg>
	</bean>

	<bean name="templateService"
		class="com.ncc.savior.virtueadmin.template.FreeMarkerTemplateService">
		<constructor-arg value="templates"></constructor-arg>
	</bean>

	<bean name="windowStartupService"
		class="com.ncc.savior.virtueadmin.infrastructure.mixed.WindowsStartupAppsService">
		<constructor-arg ref="virtueDao"></constructor-arg>
		<constructor-arg ref="keyManager"></constructor-arg>
		<constructor-arg ref="templateService"></constructor-arg>
	</bean>

	<bean name="persistentStorageDao"
		class="com.ncc.savior.virtueadmin.data.jpa.SpringJpaPersistentStorageDao">
	</bean>

	<bean name="persistentStorageManager"
		class="com.ncc.savior.virtueadmin.infrastructure.persistent.PersistentStorageManager">
		<constructor-arg ref="serverIdProvider"></constructor-arg>
		<constructor-arg ref="ec2Wrapper"></constructor-arg>
		<constructor-arg ref="persistentStorageDao"></constructor-arg>
		<constructor-arg value="${virtue.aws.persistentStorage.snapshotId}"></constructor-arg>
		<constructor-arg value="${virtue.aws.availabilityZone}"></constructor-arg>
	</bean>
	<!-- 		class="com.ncc.savior.virtueadmin.infrastructure.mixed.StandardXenProvider"> -->
	<!-- class="com.ncc.savior.virtueadmin.infrastructure.mixed.PooledXenVmProvider"> -->
	
<!-- 	<bean name="xenVmProvider" -->
<!-- 		class="com.ncc.savior.virtueadmin.infrastructure.mixed.StandardXenProvider"> -->
<!-- 		<constructor-arg ref="serverIdProvider" /> -->
<!-- 		<constructor-arg ref="ec2Wrapper"></constructor-arg> -->
<!-- 		<constructor-arg ref="vpcSubnetProvider"></constructor-arg> -->
<!-- 		<constructor-arg value="${virtue.aws.xen.ami}"></constructor-arg> -->
<!-- 		<constructor-arg value="${virtue.aws.xen.loginUser}"></constructor-arg> -->
<!-- 		<constructor-arg value="${virtue.aws.xen.vmKey}"></constructor-arg> -->
<!-- 		<constructor-arg value="${virtue.aws.xen.instanceType}"></constructor-arg> -->
<!-- 		<constructor-arg value="${virtue.aws.xen.iamRole}"></constructor-arg> -->
<!-- 	</bean> -->
	
	<bean name="xenVmProvider"
		class="com.ncc.savior.virtueadmin.infrastructure.mixed.PooledXenVmProvider">
		<constructor-arg ref="serverIdProvider" />
		<constructor-arg ref="ec2Wrapper"></constructor-arg>
		<constructor-arg ref="vpcSubnetProvider"></constructor-arg>
		<constructor-arg ref="virtueDao"></constructor-arg>
		<constructor-arg ref="futureServiceProvider"></constructor-arg>
		<constructor-arg value="${virtue.aws.xen.ami}"></constructor-arg>
		<constructor-arg value="${virtue.aws.xen.loginUser}"></constructor-arg>
		<constructor-arg value="${virtue.aws.xen.vmKey}"></constructor-arg>
		<constructor-arg value="${virtue.aws.xen.instanceType}"></constructor-arg>
		<constructor-arg value="${virtue.aws.xen.iamRole}"></constructor-arg>
		<constructor-arg value="${virtue.aws.xen.securityGroups}"></constructor-arg>
		<constructor-arg value="${virtue.aws.xen.poolSize}"></constructor-arg>
	</bean>

	<bean name="xenManager"
		class="com.ncc.savior.virtueadmin.infrastructure.mixed.XenHostManager">
		<constructor-arg ref="keyManager"></constructor-arg>
		<constructor-arg ref="ec2Wrapper"></constructor-arg>
		<constructor-arg ref="futureServiceProvider"></constructor-arg>
		<constructor-arg ref="awsRoute53"></constructor-arg>
		<constructor-arg ref="virtueDao"></constructor-arg>
		<constructor-arg ref="persistentStorageManager"></constructor-arg>
		<constructor-arg ref="vpcSubnetProvider"></constructor-arg>
		<constructor-arg ref="serverIdProvider" />
		<constructor-arg ref="templateService"></constructor-arg>
		<constructor-arg ref="xenVmProvider"></constructor-arg>
		<constructor-arg value="${virtue.aws.xen.securityGroups}"></constructor-arg>
		<constructor-arg value="${virtue.aws.usePublicDns}"></constructor-arg>
		<constructor-arg value="${virtue.aws.region}"></constructor-arg>
		<constructor-arg value="${virtue.aws.s3.image.bucketName}"></constructor-arg>
		<constructor-arg value="${virtue.aws.kms.key}"></constructor-arg>
	</bean>

	<bean name="desktopService"
		class="com.ncc.savior.virtueadmin.service.DesktopVirtueService">
		<constructor-arg ref="activeVirtueManager" />
		<constructor-arg ref="templateManager" />
		<constructor-arg ref="appManager" />
		<constructor-arg ref="resourceManager" />
		<constructor-arg ref="cifsProxyManager" />
	</bean>

	<bean name="userService" class="com.ncc.savior.virtueadmin.service.UserDataService">
		<constructor-arg ref="activeVirtueManager" />
		<constructor-arg ref="templateManager" />
	</bean>

	<bean name="xenGuestImageProvider"
		class="com.ncc.savior.virtueadmin.infrastructure.images.S3EncryptingImageManager">
		<constructor-arg ref="awsEc2Provider"></constructor-arg>
		<constructor-arg value="${virtue.aws.kms.key}"></constructor-arg>
	</bean>

	<bean name="importExportService"
		class="com.ncc.savior.virtueadmin.service.ImportExportService">
		<constructor-arg ref="templateManager" />
		<constructor-arg ref="userManager" />
		<constructor-arg ref="xenGuestImageProvider" />
		<constructor-arg ref="resourceManager" />
	</bean>

	<bean name="virtueTimeoutManager"
		class="com.ncc.savior.virtueadmin.virtue.VirtueTimeoutManager">
		<constructor-arg value="${virtue.timeout}"></constructor-arg>
		<constructor-arg ref="activeVirtueManager"></constructor-arg>
		<constructor-arg ref="desktopService"></constructor-arg>
		<constructor-arg ref="futureServiceProvider"></constructor-arg>
	</bean>

	<bean name="securityService"
		class="com.ncc.savior.virtueadmin.security.SecurityUserService"></bean>

	<bean name="permissionDao"
		class="com.ncc.savior.virtueadmin.data.jpa.SpringJpaPermissionDao"></bean>

	<bean name="permissionService" class="com.ncc.savior.virtueadmin.service.PermissionService">
		<constructor-arg ref="permissionDao" />
		<!-- <property name="defaultClipboardPermission" value="ASK" /> -->
	</bean>

</beans>
