<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/data/jpa
    	http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
    	http://www.springframework.org/schema/data/repository
        http://www.springframework.org/schema/data/repository/spring-repository-1.5.xsd">

	<bean name="certificatesDirectory" class="java.io.File">
		<constructor-arg value="${virtue.aws.server.keyDirectory}" />
	</bean>
	<bean name="keyManager"
		class="com.ncc.savior.virtueadmin.infrastructure.DirectoryKeyManager">
		<constructor-arg ref="certificatesDirectory" />
	</bean>
	<bean name="appManager"
		class="com.ncc.savior.virtueadmin.infrastructure.SimpleApplicationManager">
	</bean>

	<!-- <bean name="virtueDao" -->
	<!-- class="com.ncc.savior.virtueadmin.data.InMemoryActiveVirtueDao"> -->
	<!-- </bean> -->

	<bean name="virtueDao"
		class="com.ncc.savior.virtueadmin.data.jpa.SpringJpaActiveVirtueDao">
	</bean>
	<bean name="activeVirtueManager" class="com.ncc.savior.virtueadmin.virtue.ActiveVirtueManager">
		<constructor-arg ref="cloudManager" />
		<constructor-arg ref="virtueDao" />
	</bean>
	<!-- <bean name="templateManager" class="com.ncc.savior.virtueadmin.data.InMemoryTemplateManager"> -->
	<!-- </bean> -->

	<bean name="templateManager"
		class="com.ncc.savior.virtueadmin.data.jpa.SpringJpaTemplateManager">
	</bean>

	<bean name="userManager"
		class="com.ncc.savior.virtueadmin.data.jpa.SpringJpaUserManager">
	</bean>

	<jpa:repositories base-package="com.ncc.savior.virtueadmin.data.jpa" />

	<bean name="adminService" class="com.ncc.savior.virtueadmin.service.AdminService">
		<constructor-arg ref="templateManager" />
		<constructor-arg ref="activeVirtueManager" />
		<constructor-arg ref="userManager" />
		<constructor-arg value="${savior.initialAdmin}" />
	</bean>

	<bean name="awsEc2Provider"
		class="com.ncc.savior.virtueadmin.infrastructure.aws.VirtueAwsEc2Provider">
		<constructor-arg value="${virtue.aws.region}"></constructor-arg>
		<constructor-arg value="${virtue.aws.profile}"></constructor-arg>
	</bean>
	
	<bean name="awsRoute53" class="com.ncc.savior.virtueadmin.infrastructure.aws.Route53Manager">
		<constructor-arg ref="awsEc2Provider"></constructor-arg>
		<constructor-arg value="${virtue.aws.domain}"></constructor-arg>
	</bean>

	<bean name="ec2Wrapper"
		class="com.ncc.savior.virtueadmin.infrastructure.aws.AwsEc2Wrapper">
		<constructor-arg ref="awsEc2Provider"></constructor-arg>
	</bean>

<!-- 	<bean name="awsVmUpdater" -->
<!-- 		class="com.ncc.savior.virtueadmin.infrastructure.aws.AwsVmUpdater"> -->
<!-- 		<constructor-arg ref="awsEc2Provider"></constructor-arg> -->
<!-- 		<constructor-arg ref="activeVirtueUpdater" /> -->
<!-- 		<constructor-arg ref="keyManager" /> -->
<!-- 		<constructor-arg value="false"></constructor-arg> -->
<!-- 		<constructor-arg value="false"></constructor-arg> -->
<!-- 		<constructor-arg value="${virtue.aws.usePublicDns}"></constructor-arg> -->
<!-- 	</bean> -->
	
	<bean name="awsVmUpdater"
		class="com.ncc.savior.virtueadmin.infrastructure.future.FutureVmUpdater">
		<constructor-arg ref="awsEc2Provider"></constructor-arg>
		<constructor-arg ref="activeVirtueUpdater" />
		<constructor-arg ref="keyManager" />
		<constructor-arg value="false"></constructor-arg>
		<constructor-arg value="false"></constructor-arg>
		<constructor-arg value="${virtue.aws.usePublicDns}"></constructor-arg>
	</bean>
	<bean name="awsVmManager"
		class="com.ncc.savior.virtueadmin.infrastructure.aws.AsyncAwsEc2VmManager">
		<constructor-arg ref="awsVmUpdater" />
		<constructor-arg ref="keyManager" />
		<constructor-arg ref="ec2Wrapper" />
		<property name="defaultSubnetName" value="${virtue.aws.server.subnet.name}"></property>
		<property name="serverKeyName" value="${virtue.aws.server.vmKey}"></property>
		<property name="defaultSecurityGroupsCommaSeparated" value="${virtue.aws.server.securityGroups}"></property>
		<!-- <property name="awsProfile" value="">${virtue.aws.profile}</property> -->
		<property name="instanceType" value="${virtue.aws.instanceType}"></property>
		<property name="serverUser" value="${virtue.aws.serverUser}"></property>
		<property name="updateListener" ref="activeVirtueUpdater"></property>
		<!-- <property name="defaultAmi" value="${virtue.aws.server.defaultAmi}"></property> -->
	</bean>

	<bean name="activeVirtueUpdater"
		class="com.ncc.savior.virtueadmin.virtue.ActiveVirtueManagerUpdatingListener">
		<constructor-arg ref="virtueDao"></constructor-arg>
	</bean>

	<!-- <bean name="xenVmManager" -->
	<!-- class="com.ncc.savior.virtueadmin.infrastructure.XenVirtualMachineManager"> -->
	<!-- <constructor-arg ref="keyManager" /> -->
	<!-- <constructor-arg value="${virtue.aws.region}"></constructor-arg> -->
	<!-- <constructor-arg value="${virtue.aws.profile}"></constructor-arg> -->
	<!-- <property name="serverKeyName" value="${virtue.aws.server.vmKey}"></property> -->
	<!-- </bean> -->

	<bean name="cloudManager"
		class="com.ncc.savior.virtueadmin.infrastructure.mixed.XenAwsMixCloudManager">
		<constructor-arg ref="xenManager"></constructor-arg>
		<constructor-arg ref="awsVmManager"></constructor-arg>
		<constructor-arg ref="windowStartupService"></constructor-arg>
	</bean>
	
	<bean name="windowStartupService" class="com.ncc.savior.virtueadmin.infrastructure.mixed.WindowsStartupAppsService">
		<constructor-arg ref="virtueDao"></constructor-arg>
		<constructor-arg ref="keyManager"></constructor-arg>
	</bean>

	<bean name="xenManager"
		class="com.ncc.savior.virtueadmin.infrastructure.mixed.XenHostManager">
		<constructor-arg ref="keyManager"></constructor-arg>
		<constructor-arg ref="ec2Wrapper"></constructor-arg>
		<constructor-arg ref="virtueDao"></constructor-arg>
		<constructor-arg ref="activeVirtueUpdater"></constructor-arg>
		<constructor-arg ref="awsRoute53"></constructor-arg>
		<constructor-arg value="${virtue.aws.xen.securityGroups}"></constructor-arg>
		<constructor-arg value="${virtue.aws.server.subnet.name}"></constructor-arg>
		<constructor-arg value="${virtue.aws.xen.ami}"></constructor-arg>
		<constructor-arg value="${virtue.aws.xen.loginUser}"></constructor-arg>
		<constructor-arg value="${virtue.aws.xen.vmKey}"></constructor-arg>
		<constructor-arg value="${virtue.aws.xen.instanceType}"></constructor-arg>
		<constructor-arg value="${virtue.aws.usePublicDns}"></constructor-arg>
	</bean>

	<bean name="desktopService"
		class="com.ncc.savior.virtueadmin.service.DesktopVirtueService">
		<constructor-arg ref="activeVirtueManager" />
		<constructor-arg ref="templateManager" />
		<constructor-arg ref="appManager" />
	</bean>

	<bean name="userService" class="com.ncc.savior.virtueadmin.service.UserDataService">
		<constructor-arg ref="activeVirtueManager" />
		<constructor-arg ref="templateManager" />
	</bean>

	<bean name="importExportService"
		class="com.ncc.savior.virtueadmin.service.ImportExportService">
		<constructor-arg ref="templateManager" />
		<constructor-arg ref="userManager" />
	</bean>

	<bean name="securityService"
		class="com.ncc.savior.virtueadmin.security.SecurityUserService"></bean>

</beans>  